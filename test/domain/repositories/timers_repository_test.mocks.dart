// Mocks generated by Mockito 5.4.4 from annotations
// in app_template/test/domain/repositories/timers_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i4;

import 'package:app_template/data/local_cache/local_cache.dart' as _i3;
import 'package:app_template/domain/models/in_app_timer.dart' as _i7;
import 'package:app_template/domain/models/jwt_tokens.dart' as _i6;
import 'package:app_template/domain/models/theme_type.dart' as _i8;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFlutterSecureStorage_0 extends _i1.SmartFake
    implements _i2.FlutterSecureStorage {
  _FakeFlutterSecureStorage_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalCache].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalCache extends _i1.Mock implements _i3.LocalCache {
  @override
  _i2.FlutterSecureStorage get secureStorage => (super.noSuchMethod(
        Invocation.getter(#secureStorage),
        returnValue: _FakeFlutterSecureStorage_0(
          this,
          Invocation.getter(#secureStorage),
        ),
        returnValueForMissingStub: _FakeFlutterSecureStorage_0(
          this,
          Invocation.getter(#secureStorage),
        ),
      ) as _i2.FlutterSecureStorage);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void addChangeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addChangeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeChangeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeChangeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i6.JwtTokens?> getAuthTokens() => (super.noSuchMethod(
        Invocation.method(
          #getAuthTokens,
          [],
        ),
        returnValue: _i5.Future<_i6.JwtTokens?>.value(),
        returnValueForMissingStub: _i5.Future<_i6.JwtTokens?>.value(),
      ) as _i5.Future<_i6.JwtTokens?>);

  @override
  _i5.Future<void> setAuthTokens({required _i6.JwtTokens? tokens}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAuthTokens,
          [],
          {#tokens: tokens},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteAuthTokens() => (super.noSuchMethod(
        Invocation.method(
          #deleteAuthTokens,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveTimerEndTime(
    _i7.InAppTimers? timerType,
    DateTime? endTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTimerEndTime,
          [
            timerType,
            endTime,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTimerEndTime(_i7.InAppTimers? timerType) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTimerEndTime,
          [timerType],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<DateTime?> getTimerEndTime(_i7.InAppTimers? timerType) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimerEndTime,
          [timerType],
        ),
        returnValue: _i5.Future<DateTime?>.value(),
        returnValueForMissingStub: _i5.Future<DateTime?>.value(),
      ) as _i5.Future<DateTime?>);

  @override
  _i5.Future<void> saveThemeType(_i8.ThemeTypes? type) => (super.noSuchMethod(
        Invocation.method(
          #saveThemeType,
          [type],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i8.ThemeTypes?> getThemeType() => (super.noSuchMethod(
        Invocation.method(
          #getThemeType,
          [],
        ),
        returnValue: _i5.Future<_i8.ThemeTypes?>.value(),
        returnValueForMissingStub: _i5.Future<_i8.ThemeTypes?>.value(),
      ) as _i5.Future<_i8.ThemeTypes?>);

  @override
  _i5.Future<bool> isFirstAppStart() => (super.noSuchMethod(
        Invocation.method(
          #isFirstAppStart,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> setFirstAppStart() => (super.noSuchMethod(
        Invocation.method(
          #setFirstAppStart,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
